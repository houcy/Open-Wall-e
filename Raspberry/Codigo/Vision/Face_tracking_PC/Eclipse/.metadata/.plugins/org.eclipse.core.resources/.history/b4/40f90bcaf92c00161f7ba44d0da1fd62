//============================================================================
// Name        : Face_tracking.cpp
// Author      : Máximo Fernandezn Nuñez
// Version     : 1.0
// Copyright   :
// Description : Face tracking: software made ​​from the work of Emil Valkov,
// which was based on the work of Pierre Raufast
//============================================================================

// Librerias
#include "libreria_Detection.h"
#include "Librerias_Reconocimiento.h"
#include "Defines.h"



int main( int argc, char** argv )
{
	// Declaration of variables Face detection
	CascadeClassifier face_cascade;				// Cascade Classifier
	Mat captureFrame, grayscaleFrame;			// Captured and converted to gray Frames
	double x_face_pos, y_face_pos, area_face;	// Coordinates of the detected face
#ifdef RASPBERRY
	RaspiCamCvCapture * captureDevice;			// Video input
#else
	CvCapture * captureDevice;					// Video input
#endif


#ifdef RECOGNITION
	// Declaration of variables Face recognition
	int nPictureById[MAX_PEOPLE]; 				// Id of each person of the model of face recognition
	string people[MAX_PEOPLE];					// Each person of the model of face recognition
	int im_width, im_height;					// heigh, witdh of 1st images of the model of face recognition
	int prediction_seuil;						// Prediction limit
	vector< Rect_<int> > faces;					// Vector of faces
	#ifdef RASPBERRY
		Eigenfaces model;							// Model of face recognition
	#else
		Ptr<FaceRecognizer> model;					// Model of face recognition
	#endif

	// Prediction limit depending on the device
	#ifdef EIGENFACES
		prediction_seuil = 10;
	#else
		prediction_seuil = 1000;
	#endif

	// Model of face recognition depending on the device
	#ifdef EIGENFACES
		model = createEigenFaceRecognizer();
	#else
		model = createFisherFaceRecognizer();
	#endif

	// Training Model of face recognition
	train_model_recognition(nPictureById, people, model, im_width, im_height);
#endif


	// Video input depending on the device
#ifdef RASPBERRY
	captureDevice = raspiCamCvCreateCameraCapture(0); // Index doesn't really matter
#else
	captureDevice = cvCreateCameraCapture(0);
#endif

	// Load of Haar Cascade
	if (!load_haar_cascade(face_cascade)) {	return -1;}

	// Create new window
#ifdef SHOW
	SHOW cvNamedWindow("Face tracking", 1);
#endif

	do {
#ifdef RASPBERRY
		IplImage* image = raspiCamCvQueryFrame(captureDevice);	// Get images from the video input
#else
		IplImage* image = cvQueryFrame(captureDevice);			// Get images from the video input
#endif
		captureFrame = cvarrToMat(image);						// Convert images to Mat
		cvtColor(captureFrame, grayscaleFrame, CV_RGB2GRAY);	// Convert the image to gray scale

		// Detection and Face Recognition
		face_detection(face_cascade, grayscaleFrame, captureFrame, x_face_pos, y_face_pos, area_face, faces);

#ifdef RECOGNITION
		// Detection and Face Recognition
		face_recognition(people, grayscaleFrame, captureFrame, im_width, im_height, model,
						prediction_seuil, x_face_pos, y_face_pos, area_face);
#endif

		// Display results
#ifdef SHOW
		imshow("Face tracking", captureFrame);
#endif
	} while(cvWaitKey(10) < 0);

	// Destroy window
#ifdef SHOW
	cvDestroyWindow("Face tracking");
#endif

#ifdef RASPBERRY
	raspiCamCvReleaseCapture(&captureDevice);
#else
	cvReleaseCapture(&captureDevice);
#endif

	return 0;
}

